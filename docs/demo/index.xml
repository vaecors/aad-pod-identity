<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Active Directory Pod Identity for Kubernetes â€“ Demos</title><link>https://azure.github.io/aad-pod-identity/docs/demo/</link><description>Recent content in Demos on Azure Active Directory Pod Identity for Kubernetes</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 04 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://azure.github.io/aad-pod-identity/docs/demo/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Standard Walkthrough</title><link>https://azure.github.io/aad-pod-identity/docs/demo/standard_walkthrough/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/standard_walkthrough/</guid><description>
&lt;p>Run the following commands to set Azure-related environment variables and login to Azure via &lt;code>az login&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;SubscriptionID&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSResourceGroup&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSClusterName&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">CLUSTER_LOCATION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;lt;AKSClusterLocation&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;MC_&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">_&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">CLUSTER_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">_&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">CLUSTER_LOCATION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;demo&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># login as a user and set the appropriate subscription ID&lt;/span>
az login
az account &lt;span style="color:#204a87">set&lt;/span> -s &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>For AKS clusters, there are two resource groups that you need to be aware of - the resource group where you deploy your AKS cluster to (denoted by the environment variable &lt;code>RESOURCE_GROUP&lt;/code>), and the cluster resource group (&lt;code>MC_&amp;lt;AKSResourceGroup&amp;gt;_&amp;lt;AKSClusterName&amp;gt;_&amp;lt;AKSClusterLocation&amp;gt;&lt;/code>). The latter contains all of the infrastructure resources associated with the cluster like VM/VMSS and VNet. Depending on where you deploy your user-assigned identities, you might need additional role assignments. Please refer to &lt;a href="../../getting-started/role-assignment/">Role Assignment&lt;/a> for more information. For this demo, it is recommended to deploy the demo identity to your cluster resource group (the one with &lt;code>MC_&lt;/code> prefix).&lt;/p>
&lt;/blockquote>
&lt;h3 id="1-deploy-aad-pod-identity">1. Deploy aad-pod-identity&lt;/h3>
&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> components to an RBAC-enabled cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment-rbac.yaml
&lt;span style="color:#8f5902;font-style:italic"># For AKS clusters, deploy the MIC and AKS add-on exception by running -&lt;/span>
kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/mic-exception.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> components to a non-RBAC cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment.yaml
&lt;span style="color:#8f5902;font-style:italic"># For AKS clusters, deploy the MIC and AKS add-on exception by running -&lt;/span>
kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/mic-exception.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy &lt;code>aad-pod-identity&lt;/code> using &lt;a href="https://v3.helm.sh/">Helm 3&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add aad-pod-identity https://raw.githubusercontent.com/Azure/aad-pod-identity/master/charts
helm install aad-pod-identity aad-pod-identity/aad-pod-identity
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a list of overwritable values when installing with Helm, please refer to &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/charts/aad-pod-identity#configuration">this section&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Important: For AKS clusters with &lt;a href="https://docs.microsoft.com/en-us/azure/aks/limit-egress-traffic">limited egress traffic&lt;/a>, Please install aad-pod-identity in &lt;code>kube-system&lt;/code> namespace using the helm charts.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install aad-pod-identity aad-pod-identity/aad-pod-identity --namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>kube-system
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-create-an-identity-on-azure">2. Create an identity on Azure&lt;/h3>
&lt;p>Create an identity on Azure and store the client ID and resource ID of the identity as environment variables:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">az identity create -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_CLIENT_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity show -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query clientId -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_RESOURCE_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az identity show -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query id -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Assign the role &amp;ldquo;Reader&amp;rdquo; to the identity so it has read access to the resource group. At the same time, store the identity assignment ID as an environment variable.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">IDENTITY_ASSIGNMENT_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>az role assignment create --role Reader --assignee &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_CLIENT_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --scope /subscriptions/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">SUBSCRIPTION_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/resourceGroups/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> --query id -otsv&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-deploy-azureidentity">3. Deploy &lt;code>AzureIdentity&lt;/code>&lt;/h3>
&lt;p>Create an &lt;code>AzureIdentity&lt;/code> in your cluster that references the identity you created above:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: &amp;#34;aadpodidentity.k8s.io/v1&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentity
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> type: 0
&lt;/span>&lt;span style="color:#4e9a06"> resourceID: ${IDENTITY_RESOURCE_ID}
&lt;/span>&lt;span style="color:#4e9a06"> clientID: ${IDENTITY_CLIENT_ID}
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Set &lt;code>type: 0&lt;/code> for user-assigned MSI, &lt;code>type: 1&lt;/code> for Service Principal with client secret, or &lt;code>type: 2&lt;/code> for Service Principal with certificate. For more information, see &lt;a href="https://github.com/Azure/aad-pod-identity/tree/master/deploy/demo">here&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="4-optional-match-pods-in-the-namespace">4. (Optional) Match pods in the namespace&lt;/h3>
&lt;p>For matching pods in the namespace, please refer to the &lt;a href="../../configure/match_pods_in_namespace/">namespaced documentation&lt;/a>.&lt;/p>
&lt;h3 id="5-deploy-azureidentitybinding">5. Deploy &lt;code>AzureIdentityBinding&lt;/code>&lt;/h3>
&lt;p>Create an &lt;code>AzureIdentityBinding&lt;/code> that reference the &lt;code>AzureIdentity&lt;/code> you created above:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: &amp;#34;aadpodidentity.k8s.io/v1&amp;#34;
&lt;/span>&lt;span style="color:#4e9a06">kind: AzureIdentityBinding
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: ${IDENTITY_NAME}-binding
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> azureIdentity: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06"> selector: ${IDENTITY_NAME}
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-deployment-and-validation">6. Deployment and Validation&lt;/h3>
&lt;p>For a pod to match an identity binding, it needs a label with the key &lt;code>aadpodidbinding&lt;/code> whose value is that of the &lt;code>selector:&lt;/code> field in the &lt;code>AzureIdentityBinding&lt;/code>. Deploy a pod that validates the functionality:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOF | kubectl apply -f -
&lt;/span>&lt;span style="color:#4e9a06">apiVersion: v1
&lt;/span>&lt;span style="color:#4e9a06">kind: Pod
&lt;/span>&lt;span style="color:#4e9a06">metadata:
&lt;/span>&lt;span style="color:#4e9a06"> name: demo
&lt;/span>&lt;span style="color:#4e9a06"> labels:
&lt;/span>&lt;span style="color:#4e9a06"> aadpodidbinding: $IDENTITY_NAME
&lt;/span>&lt;span style="color:#4e9a06">spec:
&lt;/span>&lt;span style="color:#4e9a06"> containers:
&lt;/span>&lt;span style="color:#4e9a06"> - name: demo
&lt;/span>&lt;span style="color:#4e9a06"> image: mcr.microsoft.com/oss/azure/aad-pod-identity/demo:v1.6.3
&lt;/span>&lt;span style="color:#4e9a06"> args:
&lt;/span>&lt;span style="color:#4e9a06"> - --subscriptionid=${SUBSCRIPTION_ID}
&lt;/span>&lt;span style="color:#4e9a06"> - --clientid=${IDENTITY_CLIENT_ID}
&lt;/span>&lt;span style="color:#4e9a06"> - --resourcegroup=${IDENTITY_RESOURCE_GROUP}
&lt;/span>&lt;span style="color:#4e9a06"> env:
&lt;/span>&lt;span style="color:#4e9a06"> - name: MY_POD_NAME
&lt;/span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;span style="color:#4e9a06"> fieldPath: metadata.name
&lt;/span>&lt;span style="color:#4e9a06"> - name: MY_POD_NAMESPACE
&lt;/span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;span style="color:#4e9a06"> fieldPath: metadata.namespace
&lt;/span>&lt;span style="color:#4e9a06"> - name: MY_POD_IP
&lt;/span>&lt;span style="color:#4e9a06"> valueFrom:
&lt;/span>&lt;span style="color:#4e9a06"> fieldRef:
&lt;/span>&lt;span style="color:#4e9a06"> fieldPath: status.podIP
&lt;/span>&lt;span style="color:#4e9a06"> nodeSelector:
&lt;/span>&lt;span style="color:#4e9a06"> kubernetes.io/os: linux
&lt;/span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;code>mcr.microsoft.com/oss/azure/aad-pod-identity/demo&lt;/code> is an image that demostrates the use of AAD pod identity. The source code can be found &lt;a href="https://github.com/Azure/aad-pod-identity/blob/master/cmd/demo/main.go">here&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>To verify that the pod is indeed using the identity correctly:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl logs demo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If successful, the log output would be similar to the following output:&lt;/p>
&lt;pre>&lt;code class="language-log" data-lang="log">...
successfully doARMOperations vm count 1
successfully acquired a token using the MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token)
successfully acquired a token, userAssignedID MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token) clientID(xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
successfully made GET on instance metadata
...
&lt;/code>&lt;/pre>&lt;p>Once you are done with the demo, clean up your resources:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl delete pod demo
kubectl delete azureidentity &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
kubectl delete azureidentitybinding &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>-binding
az role assignment delete --id &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_ASSIGNMENT_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
az identity delete -g &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_RESOURCE_GROUP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">IDENTITY_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="uninstall-notes">Uninstall Notes&lt;/h2>
&lt;p>The NMI pods modify the nodes' [iptables] to intercept calls to IMDS endpoint within a node. This allows NMI to insert identities assigned to a pod before executing the request on behalf of the caller.&lt;/p>
&lt;p>These iptables entries will be cleaned up when the pod-identity pods are uninstalled. However, if the pods are terminated for unexpected reasons, the iptables entries can be removed with these commands on the node:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic"># remove the custom chain reference&lt;/span>
iptables -t nat -D PREROUTING -j aad-metadata
&lt;span style="color:#8f5902;font-style:italic"># flush the custom chain&lt;/span>
iptables -t nat -F aad-metadata
&lt;span style="color:#8f5902;font-style:italic"># remove the custom chain&lt;/span>
iptables -t nat -X aad-metadata
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: AAD Pod Identity Tutorial</title><link>https://azure.github.io/aad-pod-identity/docs/demo/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/tutorial/</guid><description>
&lt;p>This tutorial is based on &lt;a href="https://github.com/xtellurian/aad-pods">this repository&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://azure.microsoft.com/en-us/free/">Azure Account&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this tutorial we are going to be using the Azure CLI, bash scripts, and kubectl. There are three sections, and each section contains several scripts to run. You&amp;rsquo;ll find all the scripts in the &lt;code>tutorial&lt;/code> directory.&lt;/p>
&lt;p>To begin, clone this repository&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">git clone https://github.com/Azure/aad-pod-identity
&lt;span style="color:#204a87">cd&lt;/span> aad-pod-identity/tutorial
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="using-azure-cli-kubectl-and-bash">Using Azure CLI, kubectl and bash&lt;/h3>
&lt;p>The following steps require the &lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">Azure CLI&lt;/a>, make sure to download and &lt;a href="https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest">login&lt;/a> before starting.&lt;/p>
&lt;p>If you&amp;rsquo;re on Windows, you should use &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">Windows Subsystem for Linux&lt;/a> or another Bash terminal.&lt;/p>
&lt;p>You can install kubectl via the Azure CLI, or by &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">another method&lt;/a>&lt;/p>
&lt;p>&lt;code>az aks install-cli&lt;/code>&lt;/p>
&lt;h2 id="1-create-a-kubernetes-cluster-on-azure-aks">1. Create a Kubernetes Cluster on Azure (AKS)&lt;/h2>
&lt;h3 id="11-register-the-required-resource-types">1.1. Register the required resource types&lt;/h3>
&lt;p>&lt;code>./1-init-aks/1-azure-provider-registration.sh&lt;/code>&lt;/p>
&lt;p>AKS requires the following resources: Microsoft.Network, Microsoft.Storage, Microsoft.Compute, Microsoft.ContainerService. Register them on your subscription with the above script.&lt;/p>
&lt;h3 id="12-create-a-resource-group">1.2. Create a Resource Group&lt;/h3>
&lt;p>Set an environment variable in your shell, for the name of your resource group.&lt;/p>
&lt;p>&lt;code>export RG=&amp;quot;k8s-test&amp;quot;&lt;/code>&lt;/p>
&lt;p>This resource group is for your AKS cluster. Create it with this command.&lt;/p>
&lt;p>&lt;code>./1-init-aks/2-create-rg.sh&lt;/code>&lt;/p>
&lt;h3 id="13-create-azure-kubernetes-service">1.3. Create Azure Kubernetes Service&lt;/h3>
&lt;p>This will create an AKS instance in the resource group created above. It may take a couple of minutes to complete. Set the name of the this command in the shell.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">K8S_NAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Cluster-Name&amp;#34;&lt;/span>
./1-init-aks/3-create-aks.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="14-configure-the-kubernetes-cli---kubectl">1.4. Configure the kubernetes CLI - &lt;code>kubectl&lt;/code>&lt;/h3>
&lt;p>With &lt;code>kubectl&lt;/code> installed, run the following script&lt;/p>
&lt;p>&lt;code>./1-init-aks/4-configure-cli.sh&lt;/code>&lt;/p>
&lt;p>Now the &lt;code>kubectl&lt;/code> command should control your AKS cluster. Try it out, it should look similar to below:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl get nodes
NAME STATUS ROLES AGE VERSION
aks-nodepool1-15831963-0 Ready agent 01h v1.9.6
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-configure-aks-with-required-infrastructure-on-the-cluster">2. Configure AKS with required infrastructure on the cluster&lt;/h2>
&lt;p>Pod Identity requires two components:&lt;/p>
&lt;ol>
&lt;li>Managed Identity Controller (MIC). A pod that binds Azure Ids to other pods - creates azureAssignedIdentity CRD.&lt;/li>
&lt;li>Node Managed Identity (NMI). Identifies the pod based on the remote address of the incoming request, and then queries the k8s (through MIC) for a matching Azure Id. It then make a adal request to get the token for the client id and returns as a response to the request. Implemented as a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/">DaemonSet&lt;/a>.&lt;/li>
&lt;/ol>
&lt;p>Deploy the infrastructure with the following command to deploy MIC, NMI, and MIC CRDs.&lt;/p>
&lt;p>&lt;code>./2-config-aks/2-deploy-infra.sh&lt;/code>&lt;/p>
&lt;p>NOTE: If you have RBAC enabled, use the following deployment instead:&lt;/p>
&lt;pre>&lt;code>kubectl create -f ../../deploy/infra/deployment-rbac.yaml
&lt;/code>&lt;/pre>&lt;h2 id="3-deploy-the-demo">3. Deploy the demo&lt;/h2>
&lt;p>The demo is basic, but does prove the concept.&lt;/p>
&lt;h3 id="31-create-an-azure-id">3.1. Create an Azure Id&lt;/h3>
&lt;p>We will be assigning the demo pod an &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview">Azure Managed Service Identity&lt;/a>. The Azure Id will need to be in the same Resource Group &lt;em>as was created automatically by the provisioning of the AKS cluster&lt;/em> &lt;a href="https://github.com/Azure/aad-pod-identity/issues/38">see this issue for more information&lt;/a>.&lt;/p>
&lt;p>You might find the Resource Group name with&lt;/p>
&lt;p>&lt;code>az group list | grep $RG&lt;/code>&lt;/p>
&lt;p>Then set the environment variable&lt;/p>
&lt;p>&lt;code>export MC_RG=&amp;quot;resource-group-name&amp;quot;&lt;/code>&lt;/p>
&lt;p>Run the following to create an azure id&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/1-create-azure-id.sh&lt;/code>&lt;/p>
&lt;h3 id="32-deploy-demo">3.2. Deploy demo&lt;/h3>
&lt;p>The &lt;code>/deploy/demo/deployment.yaml&lt;/code> describes the pod that will be deployed.&lt;/p>
&lt;p>It automatically adds the following values from your environment:&lt;/p>
&lt;ul>
&lt;li>subscriptionid: Id of your Azure Subscription&lt;/li>
&lt;li>clientid: From the Azure Id you created in the step above&lt;/li>
&lt;li>resourcegroup: From the Azure Id you created above&lt;/li>
&lt;/ul>
&lt;p>Run the following to deploy the demo&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/2-deploy-demo.sh&lt;/code>&lt;/p>
&lt;h3 id="33-deploy-azure-id-to-kubernetes">3.3. Deploy Azure Id to Kubernetes&lt;/h3>
&lt;p>We need to tell the cluster about the Id we created, so it can bind it to the pod (the next step). To do that, we will deploy the spec found in &lt;code>/deploy/demo/aadpodidentity.yaml&lt;/code>.&lt;/p>
&lt;p>Run the following to deploy the Azure ID to Kubernetes:&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/3-deploy-id-to-k8s.sh&lt;/code>&lt;/p>
&lt;h3 id="34-bind-the-id-to-our-demo-pod">3.4. Bind the Id to our demo pod&lt;/h3>
&lt;p>Last thing we need to do is bind the Id we created in step 1, and deployed in step 3, to the pod we deployed in step 2.&lt;/p>
&lt;p>Deploy the binding with the following&lt;/p>
&lt;p>&lt;code>./3-deploy-demo/4-deploy-id-binding.sh&lt;/code>&lt;/p>
&lt;h2 id="did-it-work">Did it work?&lt;/h2>
&lt;p>You&amp;rsquo;ll need to check the logs of each pod to know if everything worked.&lt;/p>
&lt;p>First, get the pod names with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl get pods
NAME READY STATUS RESTARTS AGE
demo-757967c54-64pzr 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 1h &lt;span style="color:#8f5902;font-style:italic"># the demo pod&lt;/span>
mic-64ddcf5f65-h4hft 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 19h &lt;span style="color:#8f5902;font-style:italic"># the MIC pod&lt;/span>
nmi-b9xbg 1/1 Running &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 1h &lt;span style="color:#8f5902;font-style:italic"># the NMI pod&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-managed-identity-controller-pod">Check the Managed Identity Controller pod&lt;/h3>
&lt;p>Check the logs of the MIC controller and see the binding successfully applied on the node.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs mic-64ddcf5f65-h4hft
....
I0606 23:19:45.867711 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> crd.go:123&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Got id podid to assign
I0606 23:19:45.867829 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> crd.go:142&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Creating assigned Id: demo-5788d95785-ghzwv-default-podid
I0606 23:19:45.874002 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> cloudprovider.go:170&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Find aks-nodepool1-15831963-0 in resource group: MC_k8s-test_clusterFrank_eastus
I0606 23:20:11.051552 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> cloudprovider.go:162&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Underlying cloud provider operation took 25.04421296s
I0606 23:20:11.051846 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> mic.go:259&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Sync took: 25.220821436s
I0606 23:20:11.052905 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> event.go:218&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Event&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>v1.ObjectReference&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>Kind:&lt;span style="color:#4e9a06">&amp;#34;AzureIdentityBinding&amp;#34;&lt;/span>, Namespace:&lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>, Name:&lt;span style="color:#4e9a06">&amp;#34;myIdBinding&amp;#34;&lt;/span>, UID:&lt;span style="color:#4e9a06">&amp;#34;19a07e0e-69e0-11e8-9e9f-4addade2df92&amp;#34;&lt;/span>, APIVersion:&lt;span style="color:#4e9a06">&amp;#34;aadpodidentity.k8s.io/v1&amp;#34;&lt;/span>, ResourceVersion:&lt;span style="color:#4e9a06">&amp;#34;89529&amp;#34;&lt;/span>, FieldPath:&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">})&lt;/span>: type: &lt;span style="color:#4e9a06">&amp;#39;Normal&amp;#39;&lt;/span> reason: &lt;span style="color:#4e9a06">&amp;#39;binding applied&amp;#39;&lt;/span> Binding myIdBinding applied on node aks-nodepool1-15831963-0 &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> pod demo-5788d95785-ghzwv-default-podid
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-node-managed-identity-pod">Check the Node Managed Identity pod&lt;/h3>
&lt;p>Check the logs of the NMI pod to see only info level logging and 200 responses. If you see 403 or 404 responses, then something is wrong.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs nmi-b9xbg
...
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:30:04Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Status (200) took 55422159 ns&amp;#34;&lt;/span> req.method&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GET req.path&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/metadata/identity/oauth2/token req.remote&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:30:04Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;matched identityType:0 clientid:a40e83f9-6198-4633-afae-d860eb5b7f7c resource:https://management.azure.com/&amp;#34;&lt;/span> req.method&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>GET req.path&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/metadata/identity/oauth2/token req.remote&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-demo-pod">Check the demo pod&lt;/h3>
&lt;p>The demo pod should be reporting on the virtual machines in the resource group. If you see intermittant 403 responses, that is OK.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ kubectl logs demo-757967c54-64pzr
...
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>error &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;failed list all vm compute.VirtualMachinesClient#List: Failure responding to request: StatusCode=403 -- Original Error: autorest/azure: Service returned an error. Status=403 Code=\&amp;#34;AuthorizationFailed\&amp;#34; Message=\&amp;#34;The client &amp;#39;48affddb-9972-4b7e-a82b-c5d32d2a3dd5&amp;#39; with object id &amp;#39;48affddb-9972-4b7e-a82b-c5d32d2a3dd5&amp;#39; does not have authorization to perform action &amp;#39;Microsoft.Compute/virtualMachines/read&amp;#39; over scope &amp;#39;/subscriptions/c5760548-23c2-4223-b41e-5d68a8320a0c/resourceGroups/MC_k8s-test_clusterFrank_eastus/providers/Microsoft.Compute&amp;#39;.\&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully acquired a token using the MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token)&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully acquired a token, userAssignedID MSI, msiEndpoint(http://169.254.169.254/metadata/identity/oauth2/token) clientID(a40e83f9-6198-4633-afae-d860eb5b7f7c)&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2018-06-07T01:32:30Z&amp;#34;&lt;/span> &lt;span style="color:#000">level&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>info &lt;span style="color:#000">msg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;successfully made GET on instance metadata, {\&amp;#34;compute\&amp;#34;:{\&amp;#34;location\&amp;#34;:\&amp;#34;eastus\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;aks-nodepool1-15831963-0\&amp;#34;,\&amp;#34;offer\&amp;#34;:\&amp;#34;UbuntuServer\&amp;#34;,\&amp;#34;osType\&amp;#34;:\&amp;#34;Linux\&amp;#34;,\&amp;#34;placementGroupId\&amp;#34;:\&amp;#34;\&amp;#34;,\&amp;#34;platformFaultDomain\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;platformUpdateDomain\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;publisher\&amp;#34;:\&amp;#34;Canonical\&amp;#34;,\&amp;#34;resourceGroupName\&amp;#34;:\&amp;#34;MC_k8s-test_clusterFrank_eastus\&amp;#34;,\&amp;#34;sku\&amp;#34;:\&amp;#34;16.04-LTS\&amp;#34;,\&amp;#34;subscriptionId\&amp;#34;:\&amp;#34;c5760548-23c2-4223-b41e-5d68a8320a0c\&amp;#34;,\&amp;#34;tags\&amp;#34;:\&amp;#34;acsengineVersion:v0.17.0-aks;creationSource:aks-aks-nodepool1-15831963-0;orchestrator:Kubernetes:1.9.6;poolName:nodepool1;resourceNameSuffix:15831963\&amp;#34;,\&amp;#34;version\&amp;#34;:\&amp;#34;16.04.201805090\&amp;#34;,\&amp;#34;vmId\&amp;#34;:\&amp;#34;3fea4c7e-4aaf-400f-a588-2a851f6fd0cf\&amp;#34;,\&amp;#34;vmSize\&amp;#34;:\&amp;#34;Standard_DS1_v2\&amp;#34;},\&amp;#34;network\&amp;#34;:{\&amp;#34;interface\&amp;#34;:[{\&amp;#34;ipv4\&amp;#34;:{\&amp;#34;ipAddress\&amp;#34;:[{\&amp;#34;privateIpAddress\&amp;#34;:\&amp;#34;10.240.0.4\&amp;#34;,\&amp;#34;publicIpAddress\&amp;#34;:\&amp;#34;\&amp;#34;}],\&amp;#34;subnet\&amp;#34;:[{\&amp;#34;address\&amp;#34;:\&amp;#34;10.240.0.0\&amp;#34;,\&amp;#34;prefix\&amp;#34;:\&amp;#34;16\&amp;#34;}]},\&amp;#34;ipv6\&amp;#34;:{\&amp;#34;ipAddress\&amp;#34;:[]},\&amp;#34;macAddress\&amp;#34;:\&amp;#34;000D3A13DEE3\&amp;#34;}]}}&amp;#34;&lt;/span> &lt;span style="color:#000">podip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>10.244.0.25 &lt;span style="color:#000">podname&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr &lt;span style="color:#000">podnamespace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>demo-757967c54-64pzr
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-descriptions">Check the descriptions&lt;/h3>
&lt;p>&lt;code>kubectl describe azureidentity&lt;/code>&lt;/p>
&lt;p>&lt;code>kubectl describe azureidentitybinding&lt;/code>&lt;/p>
&lt;h3 id="aad-pod-identity-in-action">AAD Pod Identity In Action&lt;/h3>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=BXhIMJYDO4w">&lt;img src="https://img.youtube.com/vi/BXhIMJYDO4w/0.jpg" alt="Video of Running required commands">&lt;/a>&lt;/p></description></item><item><title>Docs: Quickstart Demo</title><link>https://azure.github.io/aad-pod-identity/docs/demo/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azure.github.io/aad-pod-identity/docs/demo/quickstart/</guid><description/></item></channel></rss>